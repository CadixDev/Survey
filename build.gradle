buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
        classpath 'gradle.plugin.net.kyori:blossom:1.1.0'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    group = 'org.cadixdev'
    archivesBaseName = project.name.toLowerCase()
    version = '0.2.0-SNAPSHOT'

    repositories {
        mavenCentral()
        if (lorenzVersion.endsWith('-SNAPSHOT')) {
            maven {
                url 'https://oss.sonatype.org/content/groups/public/'
            }
        }
    }

    dependencies {
        testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    }

    test {
        useJUnitPlatform()
    }

    processResources {
        from 'LICENSE.txt'
    }

    javadoc {
        options.encoding = 'UTF-8'
        options.charSet = 'UTF-8'
        options.links(
                'https://jd.jamiemansfield.me/lorenz/0.2.0/',
                'https://jd.jamiemansfield.me/csv/0.1.0/',
                'https://docs.oracle.com/javase/8/docs/api/'
        )
    }

    task javadocJar(type: Jar, dependsOn: 'javadoc') {
        from javadoc.destinationDir
        classifier = 'javadoc'
    }

    task sourcesJar(type: Jar, dependsOn: 'classes') {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
        apply plugin: 'signing'
        signing {
            required { !version.endsWith('-SNAPSHOT') && gradle.taskGraph.hasTask(tasks.uploadArchives) }
            sign configurations.archives
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                // Maven Central
                if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }
                }

                pom {
                    artifactId = project.archivesBaseName

                    project {
                        name = project.name
                        description = project.description
                        packaging = 'jar'
                        url = project.url
                        inceptionYear = project.inceptionYear

                        scm {
                            url = 'https://github.com/CadixDev/Survey'
                            connection = 'scm:git:https://github.com/CadixDev/Survey.git'
                            developerConnection = 'scm:git:git@github.com:CadixDev/Survey.git'
                        }

                        issueManagement {
                            system = 'GitHub'
                            url = 'https://github.com/CadixDev/Survey/issues'
                        }

                        licenses {
                            license {
                                name = 'Mozilla Public License 2.0'
                                url = 'https://opensource.org/licenses/MPL-2.0'
                                distribution = 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'jamierocks'
                                name = 'Jamie Mansfield'
                                email = 'dev@jamierocks.uk'
                                url = 'https://www.jamiemansfield.me/'
                                timezone = 'Europe/London'
                            }
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}
